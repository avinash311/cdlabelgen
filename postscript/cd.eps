%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.0
%%For: fitz@red-bean.com (B. W. Fitzpatrick)
%%Title: (cd.eps)
%%CreationDate: (3/22/99) (9:56 AM)
%avinash original, added 7 pix border on all sides: 268 380 341 416
%%BoundingBox: 261 373 348 423
%%HiResBoundingBox: 268.042 380.2209 340.6456 415.3721
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%%CMYKCustomColor: 1 0 0.55 0 (Aqua)
%%+ 1 0.5 0 0 (Blue)
%%+ 0.5 0.4 0.3 0 (Blue Gray)
%%+ 0.8 0.05 0 0 (Blue Sky)
%%+ 0.5 0.85 1 0 (Brown)
%%+ 1 0.9 0.1 0 (Dark Blue)
%%+ 1 0.55 1 0 (Forest Green)
%%+ 0.05 0.2 0.95 0 (Gold)
%%+ 0.75 0.05 1 0 (Grass Green)
%%+ 0 0.45 1 0 (Orange)
%%+ 0.15 1 1 0 (Red)
%%+ 0.45 0.9 0 0 (Violet)
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: 222 456 6 1018 725 18 0 1 3 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:30 31
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -31 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
) &
] E
%AI5_End_NonPrinting--
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 0 k
Pc
0 0 0 1 k
Pc
0 0.45 0.6 0 k
Pc
0 0.5 0.05 0 k
Pc
0 0.9 1 0 k
Pc
1 0.2 1 0 k
Pc
1 0.4 0.15 0 k
Pc
0.2 0 1 0 k
Pc
0.25 1 0.25 0 k
Pc
0.4 0.4 0.4 0 k
Pc
0.4 0.7 1 0 k
Pc
0.75 0.9 0 0 k
Pc
1 0 0.55 0 (Aqua) 0 x
Pc
1 0.5 0 0 (Blue) 0 x
Pc
0.5 0.4 0.3 0 (Blue Gray) 0 x
Pc
0.8 0.05 0 0 (Blue Sky) 0 x
Pc
0.5 0.85 1 0 (Brown) 0 x
Pc
1 0.9 0.1 0 (Dark Blue) 0 x
Pc
1 0.55 1 0 (Forest Green) 0 x
Pc
0.05 0.2 0.95 0 (Gold) 0 x
Pc
0.75 0.05 1 0 (Grass Green) 0 x
Pc
0 0.45 1 0 (Orange) 0 x
Pc
0.15 1 1 0 (Red) 0 x
Pc
0.45 0.9 0 0 (Violet) 0 x
Pc
Bb
2 (Black, White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Chrome) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Green, Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Orange, Green, Violet) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Pink, Yellow, Green ) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Purple, Red, Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
0 0 0 0 Bh
2 (White & Red Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Yellow, Violet, Orange, Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
(Arrow1.2.out/in) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Arrow1.2.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Bricks) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Checks) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(DblLine1.2.inner) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(DblLine1.2.outer) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(DblLine1.2.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Diamonds) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Hexagon) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Laurel.inner) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Laurel.outer) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Laurel.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Leaves-fall) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Polka dots) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Random circles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Rope.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Scales) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(SolidStar.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Stars) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(TriBevel.outer) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(TriBevel.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Waves-scroll) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Checks\012  2) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Diamonds\012  2) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Polka dots\012  2) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Stars\012  2) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
*u
0 O
0 g
0 R
1 G
800 Ar
0 J 0 j 0 w 4 M []0 d
%AI3_Note:
0 D
279.6128 398.9761 m
279.6128 395.4883 279.6128 388.1521 279.6128 387.3373 c
279.6128 386.2541 279.0018 385.5175 277.888 385.5175 c
276.883 385.5199 276.2856 386.4265 276.2856 387.1335 c
276.2856 387.3483 276.2584 393.6329 276.2584 399.1527 c
276.2584 400.1389 277.0732 400.7959 277.9968 400.7959 c
278.9202 400.7959 279.6128 399.9853 279.6128 398.9761 c
b
1 D
274.7238 398.9761 m
274.7238 389.3677 274.7374 388.6453 274.7374 386.9299 c
274.7374 386.2627 275.172 385.3001 275.7558 384.8111 c
276.3398 384.3223 276.917 383.9827 277.9016 383.9827 c
278.9728 383.9837 279.573 384.3027 280.2376 384.9199 c
280.8776 385.5149 281.1746 386.3187 281.1746 387.2693 c
281.1746 387.9077 281.1504 396.3465 281.1504 399.1255 c
281.1504 400.5787 279.9948 402.3441 278.0782 402.3441 c
276.3406 402.3441 274.7238 401.2985 274.7238 398.9761 c
b
*U
*u
0 D
335.9736 404.7153 m
337.033 404.6881 339.0454 404.0695 339.0646 401.8689 c
339.0856 399.4401 339.043 397.7869 339.043 397.1699 c
339.043 396.5451 339.043 396.0563 338.2554 396.0833 c
337.55 396.1071 335.4406 396.1081 334.9688 396.1105 c
334.5698 396.1165 334.1224 396.2473 334.142 397.0077 c
334.1538 397.4475 334.282 397.9473 334.1538 399.3971 c
334.0342 400.7375 333.1812 402.2703 331.329 402.2219 c
329.8716 402.1855 328.5586 401.3077 328.4226 399.2069 c
328.3712 398.4107 328.4284 390.4601 328.4012 386.8863 c
328.3876 385.1013 329.8938 383.8623 331.3562 383.8605 c
332.5394 383.8605 333.6132 384.7569 333.9908 385.6803 c
334.3618 386.5929 334.181 388.9967 334.181 389.1027 c
334.181 389.6775 334.4018 389.9449 334.9144 389.9449 c
335.4424 389.9467 337.699 389.9555 337.957 389.9555 c
338.2754 389.9555 339.1244 390.0729 339.1244 388.9669 c
339.1244 387.7125 339.0948 386.2371 339.0974 384.8655 c
339.0974 382.8403 337.685 381.7419 336.6256 381.7419 c
335.8728 381.7419 327.2548 381.7419 326.5486 381.7419 c
324.267 381.7419 323.55 383.6887 323.55 384.7947 c
323.55 388.8513 323.5878 400.3749 323.5608 401.8145 c
323.5336 403.2541 324.9024 404.7153 326.2876 404.7423 c
327.673 404.7695 334.9144 404.7423 335.9736 404.7153 c
b
1 D
322.4742 403.7433 m
321.8954 402.5743 322.0396 401.8951 322.0396 401.3529 c
322.0396 397.8565 322.0444 385.2563 322.0504 384.6155 c
322.0776 381.9527 324.3208 380.2151 326.6736 380.2423 c
329.6198 380.2585 335.345 380.2423 336.5062 380.2423 c
338.9236 380.2423 340.6184 382.6025 340.6184 384.2951 c
340.6142 386.3059 340.6456 388.9127 340.6456 389.6461 c
340.6456 390.7867 339.9834 391.5167 339.1788 391.4933 c
337.7774 391.4481 335.4832 391.5225 333.958 391.5037 c
332.834 391.4901 332.6328 390.4553 332.6328 389.4287 c
332.6328 387.9119 332.7142 387.6903 332.7142 387.1471 c
332.7142 386.5223 332.4426 385.4359 331.4106 385.4359 c
330.3784 385.4359 329.9692 386.1863 329.971 387.3373 c
329.9718 388.0623 329.9692 398.2921 329.9438 399.1255 c
329.9234 399.7663 330.3766 400.7079 331.3248 400.6959 c
332.1694 400.6849 332.6422 399.9981 332.6328 399.3699 c
332.6142 398.1773 332.61 397.6995 332.6056 396.3007 c
332.6022 395.2379 333.2846 394.5623 334.2626 394.5623 c
334.86 394.5623 337.9078 394.5731 338.9944 394.5731 c
340.0808 394.5731 340.6184 395.2253 340.5912 396.4909 c
340.564 397.7665 340.5748 398.6725 340.5748 401.8417 c
340.5748 403.4443 339.3894 406.3285 336.1096 406.3285 c
334.995 406.3293 328.4226 406.3497 326.2498 406.3285 c
324.4088 406.3123 323.1262 405.0613 322.4742 403.7433 c
b
*U
*u
0 D
316.7702 404.7209 m
317.5394 404.7209 317.53 404.1047 317.5308 403.9331 c
317.5308 404.5197 317.5308 401.6787 317.5308 401.1355 c
317.5308 400.5923 317.4214 400.4369 316.7432 400.4565 c
315.7924 400.4837 310.2136 400.4457 309.3716 400.4457 c
307.4558 400.4457 306.7468 398.6689 306.7748 397.9575 c
306.829 396.5341 307.834 395.3393 309.491 395.3123 c
311.1478 395.2849 313.7824 395.3237 315.1134 395.3229 c
317.395 395.3229 318.3766 394.2073 318.3766 391.8985 c
318.3766 389.2427 318.3728 386.1149 318.3728 384.7841 c
318.3728 382.3395 316.191 381.7817 315.6206 381.7817 c
315.0502 381.7817 304.0314 381.7963 303.298 381.7963 c
302.5646 381.7963 302.5918 382.3123 302.5918 382.9373 c
302.5918 383.5617 302.5734 384.2341 302.581 385.2729 c
302.581 385.8425 302.9976 386.0335 303.4882 386.0335 c
306.1382 386.0335 310.0622 386.0335 311.691 386.0335 c
312.533 386.0335 314.1628 386.7397 314.1356 388.5867 c
314.122 389.5103 313.3208 391.0855 311.691 391.0855 c
310.5308 391.0855 308.328 391.0855 305.824 391.0855 c
303.8472 391.0865 302.619 392.3079 302.619 394.2363 c
302.619 396.1649 302.6288 400.2103 302.6296 401.7331 c
302.6272 403.4077 303.933 404.7209 305.6068 404.7209 c
308.3756 404.7251 315.5488 404.7209 316.7702 404.7209 c
b
1 D
301.0328 402.0699 m
301.0286 400.3475 301.0436 395.4587 301.0436 394.5079 c
301.0436 391.1399 303.2496 389.5373 305.7968 389.5373 c
308.3246 389.5383 310.0342 389.5393 311.2564 389.5393 c
312.4786 389.5393 312.6146 388.9399 312.6146 388.5053 c
312.6146 388.0707 312.209 387.5565 311.557 387.5565 c
310.8724 387.5565 303.059 387.5557 302.3746 387.5545 c
301.6678 387.5535 301.0164 386.8433 301.0164 386.0877 c
301.013 384.8715 301.0164 382.8827 301.0164 381.7691 c
301.0164 380.6555 302.1844 380.2209 302.7276 380.2209 c
303.2708 380.2209 314.0732 380.2523 316.2836 380.2271 c
317.5408 380.2127 318.6618 381.2787 318.992 381.7369 c
319.2346 382.0755 319.9464 383.0457 319.9464 384.5395 c
319.9464 387.6479 319.958 393.5259 319.9248 392.2807 c
319.9622 393.6635 319.4134 394.7933 318.7802 395.4587 c
318.305 395.9569 317.2592 396.8983 315.4936 396.8983 c
313.7272 396.8983 310.9126 396.8965 309.3008 396.8983 c
308.6022 396.8983 308.35 397.4415 308.35 397.9847 c
308.35 398.3649 308.6328 398.9083 309.491 398.9083 c
312.1714 398.9083 317.0148 398.9083 317.6666 398.9083 c
318.3186 398.9083 318.9862 399.4885 319.0354 400.2115 c
319.0844 400.9293 319.0284 403.8797 319.0248 404.7751 c
319.0212 405.6375 318.4708 406.3341 316.9226 406.3069 c
316.0194 406.2917 309.1064 406.2791 305.4982 406.3069 c
303.1936 406.3283 301.0328 404.3649 301.0328 402.0699 c
b
*U
*u
0 D
296.4532 404.7209 m
296.7766 404.7225 297.1974 404.5183 297.1974 403.9225 c
297.1974 387.1703 297.2138 384.0235 297.2138 382.8555 c
297.2138 381.6875 296.7792 381.7963 296.4804 381.7963 c
296.1816 381.7963 293.2666 381.7817 292.4604 381.7817 c
292.0276 381.7817 291.727 381.9873 291.727 382.7197 c
291.727 384.6753 291.7542 402.8721 291.7542 403.7975 c
291.7466 404.3821 291.8934 404.7209 292.542 404.7209 c
292.592 404.7209 295.1818 404.7209 296.4532 404.7209 c
b
1 D
290.2604 404.6393 m
290.2604 403.9875 290.271 382.6869 290.271 382.0893 c
290.271 380.8399 290.9996 380.2225 291.9716 380.2209 c
294.5664 380.2209 296.5874 380.2227 297.3768 380.2227 c
298.3546 380.2227 298.762 381.2921 298.7348 382.0679 c
298.7162 382.6103 298.7076 395.2125 298.7076 404.3949 c
298.7076 405.8193 297.9364 406.3341 297.0672 406.3341 c
296.1438 406.3341 293.5546 406.3095 291.8086 406.3069 c
290.6032 406.2951 290.2604 405.2913 290.2604 404.6393 c
b
*U
*u
325.951 410.7509 m
325.4086 410.7509 324.8644 410.7509 324.3212 410.7509 C
324.5862 411.6549 324.9188 412.7609 325.1498 413.5623 C
325.4214 412.7337 325.6904 411.6973 325.951 410.7509 C
b
321.7292 408.0955 m
322.449 408.0955 323.092 408.0945 323.4976 408.0945 C
323.674 408.6921 323.8596 409.2297 323.9682 409.5829 C
324.3756 409.5829 326.0062 409.5839 326.3322 409.5839 C
326.4272 409.2443 326.6894 408.3057 326.7658 408.1053 C
327.3346 408.1053 328.2228 408.1063 328.543 408.1053 C
328.3802 408.7165 326.7026 414.4663 326.4038 415.2541 C
325.8334 415.2405 324.4678 415.2667 323.8568 415.2531 C
323.5056 414.1411 321.9362 408.7899 321.7292 408.0955 C
b
*U
*u
0 D
319.8134 413.3953 m
320.017 413.2459 320.085 412.0101 319.854 411.6705 c
319.6232 411.3311 318.2584 411.4507 317.5454 411.4533 C
317.558 412.0823 317.5318 412.9879 317.5454 413.5991 C
318.6046 413.5991 319.4322 413.6763 319.8134 413.3953 c
b
1 D
315.7652 408.1063 m
316.3434 408.1063 316.9672 408.0945 317.5444 408.0945 C
317.5444 408.6091 317.5318 409.3385 317.5454 409.7729 C
317.8016 409.7527 318.6444 409.7585 319.2828 409.7739 c
320.3344 409.7977 321.3088 409.9173 321.605 410.5063 c
321.8742 411.0445 321.8352 412.5451 321.7816 413.2633 c
321.7452 413.7445 321.7664 414.1913 321.482 414.5679 c
321.3098 414.7959 321.169 414.9829 320.6754 415.1581 c
319.8646 415.4457 317.4158 415.2559 315.778 415.2559 C
315.782 413.0101 315.767 408.7225 315.7652 408.1063 C
b
*U
0 D
305.336 415.2549 m
305.7532 415.2549 307.095 415.2559 307.999 415.2559 C
308.868 412.8139 309.5724 410.8323 309.8304 410.0581 C
310.2496 411.1989 310.6926 412.4523 311.6212 415.2549 C
312.4956 415.2651 313.4066 415.2559 314.2734 415.2559 C
314.2734 412.8223 314.2714 408.7681 314.2724 408.1063 C
313.9056 408.0927 313.2826 408.0961 312.4922 408.1063 C
312.4898 408.8445 312.4904 411.9911 312.4922 413.2225 C
312.1392 412.2719 311.6266 410.7877 310.715 408.1063 C
310.1184 408.1063 309.5696 408.0945 308.973 408.0945 C
308.2056 410.2633 307.481 412.3127 307.1822 413.2497 C
307.1686 412.7881 307.1812 409.7759 307.1812 408.1063 C
306.5946 408.1063 305.9234 408.0945 305.3352 408.0945 C
305.342 410.2677 305.3234 414.5851 305.336 415.2549 C
b
*u
285.8194 413.6979 m
286.4984 413.7115 286.5298 413.2023 286.5392 412.9781 c
286.557 412.5639 286.5556 383.2169 286.5556 382.7033 c
286.5556 382.0787 286.375 381.7789 285.6892 381.7817 c
278.7888 381.8099 273.5558 381.7963 272.5236 381.7963 c
271.247 381.7963 269.5902 382.8139 269.5902 384.6753 c
269.5604 393.6455 269.6376 401.1755 269.6174 402.0997 c
269.5902 403.3493 270.953 404.7517 272.3742 404.7481 c
274.509 404.7427 278.0384 404.7455 279.4498 404.7481 c
280.511 404.7497 281.1644 405.2675 281.1476 406.5543 C
281.1848 409.8511 281.1858 411.4307 281.161 412.8151 c
281.1416 413.9297 281.9012 413.6801 282.1254 413.7115 c
282.093 413.7073 284.8686 413.7251 285.8194 413.6979 C
b
1 D
279.6128 413.6843 m
279.6476 412.7549 279.6128 411.5699 279.6128 406.9753 C
279.618 406.5747 279.3304 406.3341 278.8416 406.3341 c
278.3526 406.3341 274.6566 406.3447 272.252 406.3235 c
269.9416 406.3099 268.0556 404.0233 268.0556 402.3985 c
268.0758 393.9971 268.042 387.1565 268.042 384.7297 C
268.042 382.2495 269.7098 381.0315 270.921 380.5467 c
271.7462 380.2165 272.915 380.2227 274.0718 380.2227 c
275.6362 380.2227 282.4948 380.2397 286.091 380.2209 c
288.2844 380.2093 288.1524 381.8385 288.1524 382.3637 c
288.1524 382.7169 288.1418 389.2717 288.1418 413.6029 c
288.1418 413.7641 288.1418 415.2597 286.512 415.2597 c
285.507 415.2597 282.834 415.3081 280.971 415.2597 c
280.409 415.2461 279.5722 414.6725 279.6128 413.6843 c
b
*U
*u
0 D
302.0748 413.6201 m
302.1266 413.6035 302.3176 413.5693 302.3524 413.2433 c
302.45 412.3503 302.472 410.5763 302.36 410.0347 c
302.3006 409.7573 302.169 409.6901 301.9798 409.6681 c
301.433 409.6053 300.4672 409.5527 300.1056 409.6953 c
299.9138 409.7709 299.8186 409.8821 299.7898 410.0637 c
299.687 410.8395 299.6846 412.8461 299.7388 413.1855 c
299.7932 413.5251 299.8958 413.5625 300.1326 413.6201 c
300.6768 413.7535 301.7336 413.7339 302.0748 413.6201 c
b
1 D
297.9734 414.1905 m
297.7866 413.5287 297.846 410.3983 297.919 409.4101 c
297.9844 408.5171 298.5718 408.3007 298.8426 408.2149 c
299.7432 407.9305 301.871 407.8695 303.0798 408.1471 c
304.156 408.3975 304.156 408.9883 304.207 409.3693 c
304.3318 410.3191 304.3072 413.2713 304.1662 414.1905 c
304.0746 414.7677 303.7546 414.9197 303.297 415.1005 c
302.478 415.4247 300.2694 415.4477 299.0734 415.1549 c
298.2364 414.9519 298.1312 414.7533 297.9734 414.1905 c
b
*U
0 D
293.9136 415.3721 m
294.3354 415.3865 294.9932 415.3441 295.5882 415.2099 c
296.2554 415.0589 296.6976 414.6727 296.752 414.2177 c
296.7952 413.8545 296.8334 413.2459 296.8334 412.5745 C
296.236 412.5745 295.4608 412.5617 295.0262 412.5755 C
294.9856 412.9693 295.038 413.2733 294.905 413.4709 c
294.73 413.7309 292.5878 413.8123 292.379 413.4709 c
292.278 413.3079 292.2856 412.8987 292.2702 412.6831 c
292.2262 412.0991 292.1794 410.2445 292.3926 409.8989 c
292.5988 409.5629 294.5766 409.5195 294.8506 409.8447 c
294.9728 409.9907 295.017 410.5001 295.0262 410.7285 C
295.5508 410.7285 296.2478 410.7275 296.8334 410.7275 C
296.8334 410.2045 296.859 409.7037 296.7596 409.2929 c
296.6034 408.6427 296.4226 408.4127 295.9372 408.2557 c
295.0594 407.9747 292.5708 407.8611 291.4742 408.2371 c
290.9946 408.4019 290.5982 408.5045 290.5184 409.2743 c
290.2934 411.4159 290.4784 413.5505 290.532 414.1635 c
290.5998 414.9511 291.4028 415.1837 292.0378 415.2669 c
292.6972 415.3535 293.451 415.3577 293.9136 415.3721 c
b
332.1966 415.3423 m
332.6184 415.3565 333.2762 415.3141 333.8712 415.1801 c
334.5384 415.0289 334.9806 414.6427 335.035 414.1877 c
335.0782 413.8245 335.1164 413.2285 335.1164 412.5571 C
334.5188 412.5571 333.8304 412.5571 333.282 412.5581 C
333.282 412.9655 333.283 413.1419 333.188 413.4407 c
333.0928 413.7397 330.9386 413.7955 330.7842 413.5087 c
330.6916 413.3415 330.6228 413.2625 330.594 412.7345 c
330.5592 412.1497 330.4624 410.2145 330.6754 409.8691 c
330.8818 409.5329 332.8594 409.4897 333.1336 409.8147 c
333.2558 409.9607 333.2872 410.4827 333.2966 410.7111 C
333.8212 410.7111 334.518 410.7101 335.1038 410.7101 C
335.0494 410.1873 335.063 409.7935 334.9882 409.2629 c
334.9254 408.8147 334.7056 408.3827 334.22 408.2257 c
333.3424 407.9449 330.8536 407.8311 329.757 408.2071 c
329.2774 408.3717 328.881 408.4745 328.8012 409.2443 c
328.5764 411.3859 328.7614 413.5205 328.8148 414.1335 c
328.8828 414.9211 329.6858 415.1537 330.3206 415.2369 c
330.9802 415.3235 331.734 415.3277 332.1966 415.3423 c
b
335.5236 415.2531 m
340.63 415.2531 l
340.63 413.3311 l
338.9596 413.3321 l
338.9596 408.1035 l
337.1534 408.1035 l
337.1534 413.3185 l
335.5236 413.3185 l
335.5236 415.2531 l
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
