%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 5.0
%%For: fitz@red-bean.com (B. W. Fitzpatrick)
%%Title: (cdda.eps)
%%CreationDate: (3/22/99) (8:40 AM)
%avinash original, added 7 pix border on all sides: 265 381 339 426
%%BoundingBox: 258 374 346 433
%%HiResBoundingBox: 265.9276 381.3218 338.5312 425.7624
%%DocumentProcessColors: Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 3
%AI3_ColorUsage: Black&White
%AI3_IncludePlacedImages
%%CMYKCustomColor: 1 0 0.55 0 (Aqua)
%%+ 1 0.5 0 0 (Blue)
%%+ 0.5 0.4 0.3 0 (Blue Gray)
%%+ 0.8 0.05 0 0 (Blue Sky)
%%+ 0.5 0.85 1 0 (Brown)
%%+ 1 0.9 0.1 0 (Dark Blue)
%%+ 1 0.55 1 0 (Forest Green)
%%+ 0.05 0.2 0.95 0 (Gold)
%%+ 0.75 0.05 1 0 (Grass Green)
%%+ 0 0.45 1 0 (Orange)
%%+ 0.15 1 1 0 (Red)
%%+ 0.45 0.9 0 0 (Violet)
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 30 31 582 761
%AI3_DocumentPreview: Header
%AI5_ArtSize: 612 792
%AI5_RulerUnits: 2
%AI5_ArtFlags: 1 0 0 1 0 0 1 1 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -198 756 1 1018 725 18 0 1 3 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:30 31
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -31 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 25 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			0
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			1
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop 
			0 eq
			{
				pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				pop
				3
				{
					1 exch sub
					3 index mul 
					1 exch sub
					3 1 roll
				} repeat
				4 -1 roll pop
				setrgbcolor
			} ifelse
		}
		def
	} if
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	level2?
	{
		gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
		add add add 4 eq
	}
	{
		1 0 0 0 testCMYKColorThrough
		0 1 0 0 testCMYKColorThrough
		0 0 1 0 testCMYKColorThrough
		0 0 0 1 testCMYKColorThrough
		and and and
	} ifelse
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.1 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 24 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize
{ 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6
	{
		dup type /arraytype eq
		{
			dup xcheck
			{
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not
{
	/Adobe_ColorImage_AI6_Vars 15 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/plateindex -1 def
	/XIMask 0 def
	/XIBinary 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIBuffer null def
	/XIDataProc null def
	/XIVersion 6 def
end
/WalkRGBString null def
/WalkCMYKString null def
/StuffRGBIntoGrayString null def
/RGBToGrayImageProc null def
/StuffCMYKIntoGrayString null def
/CMYKToGrayImageProc null def
/ColorImageCompositeEmulator null def
/SeparateCMYKImageProc null def
/FourEqual null def
/TestPlateIndex null def
currentdict /_colorimage known not
{
	/colorimage where
	{
		/colorimage get /_colorimage exch def
	}
	{
		/_colorimage null def
	} ifelse
} if
/_currenttransfer systemdict /currenttransfer get def
/colorimage null def
/XI null def
/WalkRGBString
{
	0 3 index
	dup length 1 sub 0 3 3 -1 roll
	{
		3 getinterval { } forall
		5 index exec
		3 index
	} for
	
	 5 { pop } repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll
	{
		4 getinterval { } forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/CMYKToGrayImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/ColorImageCompositeEmulator
{
	pop true eq
	{
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}
	{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne
		{
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq 
				{ 
					/RGBToGrayImageProc 
				}
				{ 
					/CMYKToGrayImageProc
				} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/SeparateCMYKImageProc
{	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne
		{
			sourcearray plateindex get exec
		}
		{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub
			{
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/FourEqual
{
	4 index ne
	{
		pop pop pop false
	}
	{
		4 index ne
		{
			pop pop false
		}
		{
			4 index ne
			{
				pop false
			}
			{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex
{
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where
		{
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual 
			{ 
				/plateindex 0 def
			}
			{
				0 1 0 0 FourEqual
				{ 
					/plateindex 1 def
				}
				{
					0 0 1 0 FourEqual
					{
						/plateindex 2 def
					}
					{
						0 0 0 1 FourEqual
						{ 
							/plateindex 3 def
						}
						{
							0 0 0 0 FourEqual
							{
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/colorimage
{
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index dup 
		8 eq exch 1 eq or not
 end
	
	{
		/_colorimage load null ne
		{
			_colorimage
		}
		{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}
	{
		dup 3 eq
		TestPlateIndex
		dup -1 eq exch 5 eq or or
		{
			/_colorimage load null eq
			{
				ColorImageCompositeEmulator
			}
			{
				dup 1 eq
				{
					pop pop image
				}
				{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq
					{
						grestore
					} if
				} ifelse
			} ifelse
		}
		{
			dup 1 eq
			{
				pop pop
				image
			}
			{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0
					{			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/XG
{
	pop pop
} def
/XF
{
	13 {pop} repeat
} def
/Xh
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIMask
		{
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH
{
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIMask exch 0 ne def
		/XIBinary exch 0 ne def
		pop
		pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq
		{
			XIImageWidth 8 div ceiling cvi
		}
		{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIBuffer exch string def
		XIBinary
		{
			/XIDataProc { currentfile XIBuffer readstring pop } def
			XIVersion 6 le
			{
				currentfile 128 string readline pop pop
			}
			if
		}
		{
			/XIDataProc { currentfile XIBuffer readhexstring pop } def
		} ifelse
		
		XIVersion 6 le
		{
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIMask
			{
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		
		XIMask
		{
			XIImageWidth XIImageHeight
			false
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			imagemask
		}
		{
			XIImageWidth XIImageHeight
			XIBitsPerPixel
			[ XIImageWidth 0 0 XIImageHeight neg 0 0 ]
			/XIDataProc load
			
			XIChannelCount 1 eq
			{
				gsave
				0 setgray
				image
				grestore
			}
			{
				false
				XIChannelCount
				colorimage
			} ifelse
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
Adobe_level2_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 0 k
Pc
0 0 0 1 k
Pc
0 0.45 0.6 0 k
Pc
0 0.5 0.05 0 k
Pc
0 0.9 1 0 k
Pc
1 0.2 1 0 k
Pc
1 0.4 0.15 0 k
Pc
0.2 0 1 0 k
Pc
0.25 1 0.25 0 k
Pc
0.4 0.4 0.4 0 k
Pc
0.4 0.7 1 0 k
Pc
0.75 0.9 0 0 k
Pc
1 0 0.55 0 (Aqua) 0 x
Pc
1 0.5 0 0 (Blue) 0 x
Pc
0.5 0.4 0.3 0 (Blue Gray) 0 x
Pc
0.8 0.05 0 0 (Blue Sky) 0 x
Pc
0.5 0.85 1 0 (Brown) 0 x
Pc
1 0.9 0.1 0 (Dark Blue) 0 x
Pc
1 0.55 1 0 (Forest Green) 0 x
Pc
0.05 0.2 0.95 0 (Gold) 0 x
Pc
0.75 0.05 1 0 (Grass Green) 0 x
Pc
0 0.45 1 0 (Orange) 0 x
Pc
0.15 1 1 0 (Red) 0 x
Pc
0.45 0.9 0 0 (Violet) 0 x
Pc
Bb
2 (Black, White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Chrome) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Green, Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Orange, Green, Violet) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Pink, Yellow, Green ) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Purple, Red, Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
0 0 0 0 Bh
2 (White & Red Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
Bb
2 (Yellow, Violet, Orange, Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
(Arrow1.2.out/in) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Arrow1.2.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Bricks) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Checks) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Confetti) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(DblLine1.2.inner) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(DblLine1.2.outer) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(DblLine1.2.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Diamonds) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Hexagon) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Laurel.inner) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Laurel.outer) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Laurel.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Leaves-fall) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Polka dots) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Random circles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Rope.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Scales) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(SolidStar.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Stars) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(TriBevel.outer) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(TriBevel.side) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
(Waves-scroll) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
u
*u
0 O
0 0 0 1 k
0 R
1 G
800 Ar
0 J 0 j 0 w 4 M []0 d
%AI3_Note:
0 D
325.8716 386.8288 m
326.2324 386.787 326.3902 386.6792 326.4132 386.3676 c
326.47 385.6146 326.5176 384.2948 326.4284 383.5676 c
326.3952 383.2948 326.257 383.1268 325.8852 383.0802 c
325.414 383.0268 324.3752 383.0648 323.7666 383.0531 C
323.7682 384.1496 323.7726 385.5722 323.7684 386.8692 C
324.478 386.8556 325.5414 386.87 325.8716 386.8288 c
b
1 D
321.9602 381.4368 m
323.6758 381.4368 325.6788 381.2884 326.9308 381.5456 c
327.374 381.6372 327.8314 381.7212 328.1396 382.2789 c
328.4018 382.7592 328.3976 386.9864 328.1396 387.6298 c
328.0692 387.8054 327.7746 388.2622 326.8494 388.404 c
325.7672 388.5728 323.6604 388.5028 321.9602 388.5028 C
321.9704 387.8696 321.9696 383.5658 321.9602 381.4368 C
b
*U
*u
0 D
333.3552 388.4492 m
334.5512 388.742 336.7598 388.7192 337.5788 388.3948 c
338.0364 388.2142 338.3564 388.0622 338.448 387.485 c
338.589 386.5658 338.6136 383.6136 338.4888 382.6638 c
338.4378 382.2826 338.4378 381.6918 337.3616 381.4414 c
336.1528 381.1638 334.025 381.225 333.1244 381.5094 c
332.8536 381.595 332.2662 381.8116 332.2008 382.7046 c
332.1278 383.6926 332.0684 386.823 332.2552 387.485 c
332.413 388.0478 332.5182 388.2464 333.3552 388.4492 c
b
1 D
334.4778 386.9272 m
334.2282 386.8442 334.075 386.8194 334.0206 386.48 c
333.9664 386.1406 333.969 384.1338 334.0716 383.358 c
334.1004 383.1764 334.1956 383.0652 334.3874 382.9896 c
334.749 382.847 335.715 382.8996 336.2616 382.9624 c
336.4508 382.9846 336.5824 383.0516 336.6418 383.3292 c
336.7538 383.8708 336.7318 385.6448 336.6342 386.5376 c
336.5994 386.8636 336.3198 386.9102 336.2682 386.9272 c
335.8698 387.06 334.9334 387.0788 334.4778 386.9272 c
b
*U
0 D
329.3232 388.4986 m
331.1568 388.4986 l
331.1568 381.422 l
329.3232 381.422 l
329.3232 388.4986 l
b
316.2566 388.5004 m
314.4358 388.4994 l
314.4368 383.3694 314.4386 382.802 v
314.4414 381.902 314.953 381.4729 315.8238 381.3218 c
317.2362 381.0774 318.9202 381.186 319.545 381.3354 c
320.1698 381.4848 320.7014 381.6884 320.6994 382.5576 c
320.6962 383.9672 320.705 387.8216 320.6914 388.5004 C
320.0542 388.5014 319.381 388.514 318.96 388.5004 C
318.9592 387.9028 318.961 384.0516 318.961 383.7256 c
318.961 383.3996 318.9882 382.87 318.3364 382.8564 c
317.6844 382.8428 317.1004 382.802 316.8288 382.87 c
316.5572 382.9378 316.269 382.9102 316.2584 383.5354 c
316.2482 384.136 316.2566 388.5004 y
b
299.9622 388.5032 m
301.7956 388.5032 l
301.7956 383.2202 l
304.607 383.2202 l
304.607 381.426 l
299.9622 381.426 l
299.9622 388.5032 l
b
284.3704 388.4994 m
286.2174 388.4994 l
286.2174 381.422 l
284.3588 381.422 l
284.3704 388.4994 l
b
273.8588 388.5062 m
275.7058 388.5062 l
275.7058 381.4286 l
273.8724 381.4286 l
273.8588 388.5062 l
b
*u
311.4372 384.0332 m
310.8948 384.0332 310.3508 384.0332 309.8074 384.0332 C
310.0724 384.9372 310.405 386.0434 310.636 386.8444 C
310.9076 386.016 311.1766 384.9798 311.4372 384.0332 C
b
1 D
307.2154 381.4286 m
307.9352 381.4286 308.654 381.4278 309.0344 381.4278 C
309.2108 382.0252 309.3458 382.5248 309.4544 382.878 C
309.8618 382.878 311.5052 382.8788 311.831 382.8788 C
311.9262 382.5394 312.1756 381.626 312.252 381.426 C
312.8208 381.426 313.6838 381.4266 314.004 381.426 C
313.841 382.0368 312.2268 387.7108 311.928 388.4986 C
311.3576 388.485 309.9288 388.5112 309.3176 388.4976 C
308.9918 387.4654 307.4462 382.2026 307.2154 381.4286 C
b
*U
0 D
287.1672 388.5052 m
292.2736 388.5052 l
292.2736 386.672 l
290.6032 386.6854 l
290.6032 381.4188 l
288.7968 381.4188 l
288.7968 386.672 l
287.1672 386.672 l
287.1672 388.5052 l
b
*u
294.2544 388.4986 m
294.8656 388.5122 296.2566 388.486 296.827 388.4994 C
297.1258 387.7118 298.74 382.038 298.903 381.4266 C
298.6458 381.4278 297.7324 381.4266 297.1636 381.4266 C
297.0872 381.6272 296.8376 382.477 296.7426 382.8166 C
296.4166 382.8166 294.7734 382.8158 294.366 382.8158 C
294.2574 382.4626 294.1352 382.026 293.9586 381.4286 C
293.5784 381.4286 292.872 381.4296 292.1524 381.4296 C
292.3832 382.2038 293.9286 387.4664 294.2544 388.4986 C
b
1 D
295.5476 386.7948 m
295.3166 385.9936 294.984 384.8876 294.719 383.9838 C
295.2624 383.9838 295.8064 383.9838 296.3488 383.9838 C
296.0882 384.93 295.8192 385.9664 295.5476 386.7948 C
b
*U
*u
0 D
270.287 386.822 m
270.6478 386.7804 270.8056 386.6726 270.8286 386.3612 c
270.8854 385.6082 270.933 384.2884 270.8438 383.561 c
270.8108 383.2884 270.6724 383.1204 270.3006 383.0738 c
269.8296 383.0202 268.7906 383.0584 268.182 383.0466 C
268.1836 384.1432 268.188 385.5658 268.1838 386.8628 C
268.8934 386.8494 269.9568 386.8636 270.287 386.822 c
b
1 D
266.3758 381.4304 m
268.0912 381.4304 270.0944 381.2818 271.3464 381.539 c
271.7894 381.6308 272.2468 381.715 272.555 382.2724 c
272.8172 382.7528 272.813 386.98 272.555 387.6236 c
272.4846 387.7992 272.19 388.2558 271.2648 388.3974 c
270.1826 388.5664 268.0758 388.4962 266.3758 388.4962 C
266.3858 387.863 266.385 383.5592 266.3758 381.4304 C
b
*U
0 D
278.0282 388.4926 m
279.1232 388.7684 281.3826 388.742 282.1788 388.4654 c
282.6084 388.316 283.0896 388.097 283.1888 387.3382 c
283.2406 386.94 283.2432 386.4188 283.2568 386.1022 C
282.6398 386.1022 282.0276 386.1022 281.4098 386.1022 C
281.4098 386.2374 281.3622 386.446 281.3368 386.5836 c
281.3096 386.7298 281.2486 386.896 280.8802 386.9578 c
280.5796 387.0088 279.8132 387.0564 279.3038 386.9859 c
278.8548 386.9214 278.7208 386.7702 278.6936 386.3884 c
278.624 385.4096 278.663 383.9114 278.7072 383.4268 c
278.7402 383.0474 278.9932 382.9922 279.2096 382.9514 c
279.5186 382.8938 280.3122 382.8736 280.785 382.9378 c
281.1238 382.9846 281.2714 383.0024 281.3554 383.4132 c
281.3834 383.5532 281.4098 383.7714 281.4098 383.9838 C
281.0168 384.015 280.3912 383.9676 279.9974 384.0108 C
279.9974 384.3818 279.9964 384.807 279.9964 385.1778 C
281.0482 385.1778 282.1652 385.1788 283.216 385.1788 C
283.345 384.503 283.3136 382.7222 283.0938 382.1366 c
282.997 381.8812 282.6932 381.64 282.442 381.539 c
281.6356 381.2174 279.4712 381.1666 278.2582 381.3676 c
277.8262 381.439 277.4696 381.5976 277.2812 381.7565 c
277.1436 381.8726 276.9874 382.1222 276.9552 382.327 c
276.827 383.1333 276.7922 383.8624 276.7898 385.3282 c
276.7898 385.8046 276.8738 387.2184 276.928 387.4876 c
277.0682 388.209 277.4492 388.3482 278.0282 388.4926 c
b
*u
277.4984 409.3664 m
277.4984 405.8786 277.4984 398.5424 277.4984 397.7276 c
277.4984 396.6445 276.8874 395.9078 275.7736 395.9078 c
274.7686 395.9102 274.1712 396.8168 274.1712 397.5238 c
274.1712 397.7386 274.144 404.0232 274.144 409.543 c
274.144 410.5292 274.9588 411.1862 275.8824 411.1862 c
276.8058 411.1862 277.4984 410.3756 277.4984 409.3664 c
b
1 D
272.6094 409.3664 m
272.6094 399.758 272.623 399.0358 272.623 397.3202 c
272.623 396.653 273.0576 395.6904 273.6414 395.2014 c
274.2254 394.7126 274.8026 394.373 275.7872 394.373 c
276.8584 394.374 277.4586 394.693 278.1232 395.3104 c
278.7632 395.9054 279.0602 396.709 279.0602 397.6596 c
279.0602 398.298 279.036 406.7368 279.036 409.5158 c
279.036 410.969 277.8804 412.7344 275.9638 412.7344 c
274.2262 412.7344 272.6094 411.689 272.6094 409.3664 c
b
*U
*u
0 D
333.8592 415.1056 m
334.9186 415.0784 336.931 414.4598 336.9502 412.2592 c
336.9712 409.8306 336.9286 408.1772 336.9286 407.5604 c
336.9286 406.9354 336.9286 406.4466 336.141 406.4736 c
335.4356 406.4974 333.3262 406.4986 332.8544 406.5008 c
332.4554 406.5068 332.008 406.6376 332.0276 407.398 c
332.0394 407.8378 332.1676 408.3376 332.0394 409.7874 c
331.9198 411.1278 331.0668 412.6608 329.2146 412.6124 c
327.7572 412.5758 326.4442 411.698 326.3082 409.5972 c
326.2568 408.801 326.314 400.8504 326.2868 397.2768 c
326.2732 395.4916 327.7794 394.2526 329.2418 394.2508 c
330.425 394.2508 331.4988 395.1472 331.8764 396.0706 c
332.2474 396.9832 332.0666 399.387 332.0666 399.4932 c
332.0666 400.0678 332.2874 400.335 332.8 400.335 c
333.328 400.3368 335.5846 400.3458 335.8426 400.3458 c
336.161 400.3458 337.01 400.4632 337.01 399.3572 c
337.01 398.103 336.9804 396.6274 336.983 395.2558 c
336.983 393.2306 335.5706 392.1322 334.5112 392.1322 c
333.7584 392.1322 325.1404 392.1322 324.4342 392.1322 c
322.1526 392.1322 321.4356 394.079 321.4356 395.185 c
321.4356 399.2416 321.4734 410.7652 321.4464 412.2048 c
321.4192 413.6445 322.788 415.1056 324.1732 415.1326 c
325.5586 415.1598 332.8 415.1326 333.8592 415.1056 c
b
1 D
320.3598 414.1334 m
319.781 412.9646 319.9252 412.2854 319.9252 411.7432 c
319.9252 408.2468 319.93 395.6466 319.936 395.0058 c
319.9632 392.343 322.2064 390.6054 324.5592 390.6326 c
327.5054 390.6488 333.2306 390.6326 334.3918 390.6326 c
336.8092 390.6326 338.504 392.9928 338.504 394.6854 c
338.4998 396.6962 338.5312 399.3031 338.5312 400.0364 c
338.5312 401.177 337.869 401.9072 337.0644 401.8834 c
335.663 401.8385 333.3688 401.913 331.8436 401.8942 c
330.7196 401.8804 330.5184 400.8458 330.5184 399.819 c
330.5184 398.3022 330.5998 398.0806 330.5998 397.5374 c
330.5998 396.9126 330.3282 395.8262 329.2962 395.8262 c
328.264 395.8262 327.8548 396.5766 327.8566 397.7276 c
327.8574 398.4524 327.8548 408.6824 327.8294 409.5158 c
327.809 410.1566 328.2622 411.098 329.2104 411.0864 c
330.055 411.0752 330.5278 410.3884 330.5184 409.7602 c
330.4998 408.5676 330.4956 408.09 330.4912 406.691 c
330.4878 405.6282 331.1702 404.9526 332.1482 404.9526 c
332.7456 404.9526 335.7934 404.9635 336.88 404.9635 c
337.9664 404.9635 338.504 405.6156 338.4768 406.8812 c
338.4496 408.1568 338.4604 409.0626 338.4604 412.232 c
338.4604 413.8346 337.275 416.7188 333.9952 416.7188 c
332.8806 416.7196 326.3082 416.74 324.1354 416.7188 c
322.2944 416.7026 321.0118 415.4516 320.3598 414.1334 c
b
*U
*u
0 D
314.6558 415.1112 m
315.425 415.1112 315.4156 414.495 315.4164 414.3234 c
315.4164 414.91 315.4164 412.069 315.4164 411.5258 c
315.4164 410.9826 315.307 410.8272 314.6288 410.8468 c
313.678 410.874 308.0992 410.836 307.2572 410.836 c
305.3414 410.836 304.6324 409.0592 304.6604 408.3479 c
304.7146 406.9244 305.7196 405.7298 307.3766 405.7024 c
309.0334 405.6752 311.668 405.714 312.999 405.7132 c
315.2806 405.7132 316.2622 404.5976 316.2622 402.2888 c
316.2622 399.633 316.2584 396.5052 316.2584 395.1744 c
316.2584 392.7298 314.0766 392.172 313.5062 392.172 c
312.9358 392.172 301.917 392.1866 301.1836 392.1866 c
300.4502 392.1866 300.4774 392.7026 300.4774 393.3274 c
300.4774 393.952 300.459 394.6244 300.4666 395.6632 c
300.4666 396.2328 300.8832 396.4238 301.3738 396.4238 c
304.0238 396.4238 307.9478 396.4238 309.5766 396.4238 c
310.4186 396.4238 312.0484 397.13 312.0212 398.977 c
312.0076 399.9006 311.2064 401.4758 309.5766 401.4758 c
308.4164 401.4758 306.2136 401.4758 303.7096 401.4758 c
301.7328 401.4768 300.5046 402.6984 300.5046 404.6266 c
300.5046 406.5552 300.5144 410.6006 300.5152 412.1236 c
300.5128 413.798 301.8186 415.1112 303.4924 415.1112 c
306.2612 415.1154 313.4344 415.1112 314.6558 415.1112 c
b
1 D
298.9184 412.46 m
298.9142 410.7378 298.9292 405.849 298.9292 404.8982 c
298.9292 401.5304 301.1352 399.9278 303.6824 399.9278 c
306.2102 399.9286 307.9198 399.9296 309.142 399.9296 c
310.3642 399.9296 310.5002 399.3302 310.5002 398.8956 c
310.5002 398.461 310.0946 397.9468 309.4426 397.9468 c
308.758 397.9468 300.9446 397.946 300.2602 397.9448 c
299.5534 397.9438 298.902 397.2338 298.902 396.478 c
298.8986 395.2618 298.902 393.273 298.902 392.1594 c
298.902 391.0458 300.07 390.6112 300.6132 390.6112 c
301.1564 390.6112 311.9588 390.6427 314.1692 390.6174 c
315.4264 390.603 316.5474 391.6688 316.8776 392.1272 c
317.1202 392.4658 317.832 393.436 317.832 394.9298 c
317.832 398.0382 317.8436 403.9162 317.8104 402.671 c
317.8478 404.0538 317.299 405.1836 316.6658 405.849 c
316.1906 406.3472 315.1448 407.2886 313.3792 407.2886 c
311.6128 407.2886 308.7982 407.2868 307.1864 407.2886 c
306.4878 407.2886 306.2356 407.8318 306.2356 408.375 c
306.2356 408.7552 306.5184 409.2986 307.3766 409.2986 c
310.057 409.2986 314.9004 409.2986 315.5522 409.2986 c
316.2042 409.2986 316.8718 409.8788 316.921 410.6018 c
316.97 411.3196 316.914 414.27 316.9104 415.1654 c
316.9068 416.0278 316.3564 416.7244 314.8082 416.6972 c
313.905 416.682 306.992 416.6694 303.3838 416.6972 c
301.0792 416.7186 298.9184 414.7552 298.9184 412.46 c
b
*U
*u
0 D
294.3388 415.1112 m
294.6622 415.1128 295.083 414.9086 295.083 414.3128 c
295.083 397.5606 295.0994 394.4138 295.0994 393.2458 c
295.0994 392.0778 294.6648 392.1866 294.366 392.1866 c
294.0672 392.1866 291.1522 392.172 290.346 392.172 c
289.9132 392.172 289.6126 392.3776 289.6126 393.11 c
289.6126 395.0658 289.6398 413.2624 289.6398 414.1876 c
289.6322 414.7724 289.779 415.1112 290.4276 415.1112 c
290.4776 415.1112 293.0674 415.1112 294.3388 415.1112 c
b
1 D
288.146 415.0296 m
288.146 414.3778 288.1566 393.0772 288.1566 392.4798 c
288.1566 391.2302 288.8852 390.6128 289.8572 390.6112 c
292.452 390.6112 294.473 390.613 295.2624 390.613 c
296.2402 390.613 296.6476 391.6824 296.6204 392.4582 c
296.6018 393.0006 296.5932 405.603 296.5932 414.7852 c
296.5932 416.2096 295.822 416.7244 294.9528 416.7244 c
294.0294 416.7244 291.4402 416.6998 289.6942 416.6972 c
288.4888 416.6854 288.146 415.6816 288.146 415.0296 c
b
*U
*u
0 D
323.8366 421.1412 m
323.2942 421.1412 322.75 421.1412 322.2068 421.1412 C
322.4718 422.0452 322.8044 423.1512 323.0354 423.9524 C
323.307 423.124 323.576 422.0876 323.8366 421.1412 C
b
1 D
319.6148 418.4859 m
320.3346 418.4859 320.9776 418.4848 321.3832 418.4848 C
321.5596 419.0824 321.7452 419.62 321.8538 419.9732 C
322.2612 419.9732 323.8918 419.9744 324.2178 419.9744 C
324.3128 419.6348 324.575 418.696 324.6514 418.4956 C
325.2202 418.4956 326.1084 418.4968 326.4286 418.4956 C
326.2658 419.107 324.5882 424.8566 324.2894 425.6445 C
323.719 425.6308 322.3534 425.6572 321.7424 425.6434 C
321.3912 424.5314 319.8218 419.18 319.6148 418.4859 C
b
*U
*u
0 D
317.699 423.7858 m
317.9026 423.6362 317.9706 422.4004 317.7396 422.0608 c
317.5088 421.7214 316.144 421.841 315.431 421.8436 C
315.4436 422.4726 315.4174 423.3782 315.431 423.9894 C
316.4902 423.9894 317.3178 424.0666 317.699 423.7858 c
b
1 D
313.6508 418.4968 m
314.229 418.4968 314.8528 418.4848 315.43 418.4848 C
315.43 418.9994 315.4174 419.7288 315.431 420.1632 C
315.6872 420.143 316.53 420.1488 317.1684 420.1642 c
318.22 420.188 319.1944 420.3076 319.4906 420.8966 c
319.7598 421.4348 319.7208 422.9354 319.6672 423.6536 c
319.6308 424.1348 319.652 424.5816 319.3676 424.9582 c
319.1954 425.1862 319.0546 425.3732 318.561 425.5484 c
317.7502 425.836 315.3014 425.6462 313.6636 425.6462 C
313.6676 423.4004 313.6526 419.1128 313.6508 418.4968 C
b
*U
0 D
303.2216 425.6452 m
303.6388 425.6452 304.9806 425.6462 305.8846 425.6462 C
306.7536 423.2042 307.458 421.2226 307.716 420.4484 C
308.1352 421.5892 308.5782 422.8426 309.5068 425.6452 C
310.3812 425.6554 311.2922 425.6462 312.159 425.6462 C
312.159 423.2126 312.157 419.1584 312.158 418.4968 C
311.7912 418.483 311.1682 418.4864 310.3778 418.4968 C
310.3754 419.2348 310.376 422.3815 310.3778 423.6128 C
310.0248 422.6622 309.5122 421.1781 308.6006 418.4968 C
308.004 418.4968 307.4552 418.4848 306.8586 418.4848 C
306.0912 420.6536 305.3666 422.703 305.0678 423.64 C
305.0542 423.1782 305.0668 420.1662 305.0668 418.4968 C
304.4802 418.4968 303.809 418.4848 303.2208 418.4848 C
303.2276 420.658 303.209 424.9754 303.2216 425.6452 C
b
*u
283.705 424.0882 m
284.384 424.1018 284.4154 423.5926 284.4248 423.3684 c
284.4426 422.9542 284.4412 393.6072 284.4412 393.0936 c
284.4412 392.469 284.2606 392.1692 283.5748 392.172 c
276.6744 392.2002 271.4414 392.1866 270.4092 392.1866 c
269.1326 392.1866 267.4758 393.2042 267.4758 395.0658 c
267.446 404.0358 267.5232 411.5658 267.503 412.49 c
267.4758 413.7396 268.8386 415.142 270.2598 415.1384 c
272.3946 415.133 275.924 415.1358 277.3354 415.1384 c
278.3966 415.14 279.05 415.6578 279.0332 416.9446 C
279.0704 420.2414 279.0714 421.821 279.0466 423.2056 c
279.0272 424.32 279.7868 424.0704 280.011 424.1018 c
279.9786 424.0976 282.7542 424.1154 283.705 424.0882 C
b
1 D
277.4984 424.0746 m
277.5332 423.1452 277.4984 421.9602 277.4984 417.3656 C
277.5036 416.965 277.216 416.7244 276.7272 416.7244 c
276.2382 416.7244 272.5422 416.735 270.1376 416.7138 c
267.8272 416.7002 265.9412 414.4134 265.9412 412.7888 c
265.9614 404.3874 265.9276 397.547 265.9276 395.12 C
265.9276 392.6398 267.5954 391.422 268.8066 390.9372 c
269.6318 390.607 270.8006 390.613 271.9574 390.613 c
273.5218 390.613 280.3804 390.63 283.9766 390.6112 c
286.17 390.5997 286.038 392.2288 286.038 392.754 c
286.038 393.1072 286.0274 399.662 286.0274 423.9932 c
286.0274 424.1544 286.0274 425.65 284.3976 425.65 c
283.3926 425.65 280.7196 425.6984 278.8566 425.65 c
278.2946 425.6366 277.4578 425.0626 277.4984 424.0746 c
b
*U
*u
0 D
299.9604 424.0104 m
300.0122 423.9936 300.2032 423.9596 300.238 423.6336 c
300.3356 422.7406 300.3576 420.9668 300.2456 420.425 c
300.1862 420.1478 300.0546 420.0806 299.8654 420.0584 c
299.3186 419.9956 298.3528 419.943 297.9912 420.0856 c
297.7994 420.1612 297.7042 420.2724 297.6754 420.454 c
297.5726 421.2298 297.5702 423.2364 297.6244 423.5758 c
297.6788 423.9154 297.7814 423.9528 298.0182 424.0104 c
298.5624 424.1438 299.6192 424.1242 299.9604 424.0104 c
b
1 D
295.859 424.5808 m
295.6722 423.9188 295.7316 420.7884 295.8046 419.8004 c
295.87 418.9074 296.4574 418.691 296.7282 418.6052 c
297.6288 418.3208 299.7566 418.2598 300.9654 418.5374 c
302.0416 418.788 302.0416 419.3786 302.0926 419.7598 c
302.2174 420.7096 302.1928 423.6616 302.0518 424.5808 c
301.9602 425.158 301.6402 425.31 301.1826 425.491 c
300.3636 425.815 298.155 425.8382 296.959 425.5452 c
296.122 425.3422 296.0168 425.1436 295.859 424.5808 c
b
*U
0 D
291.7992 425.7624 m
292.221 425.7768 292.8788 425.7344 293.4738 425.6002 c
294.141 425.4492 294.5832 425.063 294.6376 424.608 c
294.6808 424.245 294.719 423.6362 294.719 422.965 C
294.1216 422.965 293.3464 422.952 292.9118 422.9658 C
292.8712 423.3596 292.9236 423.6634 292.7906 423.861 c
292.6156 424.1212 290.4734 424.2024 290.2646 423.861 c
290.1636 423.6984 290.1712 423.289 290.1558 423.0734 c
290.1118 422.4894 290.065 420.6348 290.2782 420.2892 c
290.4844 419.9532 292.4622 419.9098 292.7362 420.235 c
292.8584 420.3812 292.9026 420.8906 292.9118 421.1186 C
293.4364 421.1186 294.1334 421.1178 294.719 421.1178 C
294.719 420.5948 294.7446 420.094 294.6452 419.6832 c
294.489 419.033 294.3082 418.8031 293.8228 418.646 c
292.945 418.365 290.4564 418.2514 289.3598 418.6274 c
288.8802 418.792 288.4838 418.8946 288.404 419.6648 c
288.179 421.8064 288.364 423.9408 288.4176 424.5538 c
288.4854 425.3414 289.2884 425.574 289.9234 425.6572 c
290.5828 425.7438 291.3366 425.748 291.7992 425.7624 c
b
330.0822 425.7324 m
330.504 425.7468 331.1618 425.7044 331.7568 425.5704 c
332.424 425.4192 332.8662 425.033 332.9206 424.578 c
332.9638 424.215 333.002 423.6188 333.002 422.9474 C
332.4044 422.9474 331.716 422.9474 331.1676 422.9484 C
331.1676 423.3558 331.1686 423.5322 331.0736 423.831 c
330.9784 424.1298 328.8242 424.1858 328.6698 423.899 c
328.5772 423.732 328.5084 423.6528 328.4796 423.1248 c
328.4448 422.5401 328.348 420.6048 328.561 420.2594 c
328.7674 419.9232 330.745 419.8798 331.0192 420.205 c
331.1414 420.3512 331.1728 420.873 331.1822 421.1014 C
331.7068 421.1014 332.4036 421.1004 332.9894 421.1004 C
332.935 420.5776 332.9486 420.1838 332.8738 419.6532 c
332.811 419.205 332.5912 418.773 332.1056 418.616 c
331.228 418.335 328.7392 418.2214 327.6426 418.5976 c
327.163 418.762 326.7666 418.8648 326.6868 419.6348 c
326.462 421.7762 326.647 423.9108 326.7004 424.5238 c
326.7684 425.3114 327.5714 425.544 328.2062 425.6272 c
328.8658 425.7138 329.6196 425.718 330.0822 425.7324 c
b
333.4092 425.6434 m
338.5156 425.6434 l
338.5156 423.7214 l
336.8452 423.7226 l
336.8452 418.4938 l
335.039 418.4938 l
335.039 423.7088 l
333.4092 423.7088 l
333.4092 425.6434 l
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
